name: PIP_ROOT_USER_ACTION ignored 

on:
  push:
    branches:
      - main
  workflow_dispatch:
# env:
#   PIP_ROOT_USER_ACTION: ignore
jobs:
  build:
    runs-on: [self-hosted]
    # container: ubuntu:20.04
    container:
      image: ubuntu:20.04
    #   options: --name UbuntuCont
      # env:
      #   PIP_ROOT_USER_ACTION: ignore
    
    steps:

      - uses: actions/checkout@v4
      # - name: Install Docker
      #   run: |
      #     apt-get update
      #     apt-get install -y docker.io
      
      - name: Install lsb-release
        run: |
          apt-get update
          apt-get install -y lsb-release
      

      # - name: Run Docker command
      #   run: |
      #     docker run -d -e PIP_ROOT_USER_ACTION=ignore ubuntu:20.04 tail -f /dev/null
      # - name: Check Docker Container
      #   run: |
      #     echo "Running inside Docker container:"
      #     cat /etc/os-release
      #     docker --version
      - name: Print environment variables
        run: env
    
      - name: fix pip issue
        run: mkdir -p /github/home/.cache/pip

      # - name: Run Docker with Environment Variable
      #   run: |
      #     docker run -e PIP_ROOT_USER_ACTION=ignore ubuntu:20.04 env | grep PIP_ROOT_USER_ACTION
      # - name: Install sudo
      #   run: |
      #     apt-get update
      #     apt-get install -y sudo
      # - name: Remove specific Python cache directory
      #   run: |
      #     sudo rm -rf /__w/_tool/Python/3.11.6/x64/bin/pip
     
      - name: Set environment variables from .env file
        shell: bash
        run: |
          set -a
          source .env
          set +a
        # This step reads the .env file and sets environment variables for subsequent steps.

      - name: Setup Python
        uses: priya-kinthali/setup-python@test-930
        with:
          python-version: "3.10.15"
          cache: 'pip'
          cache-dependency-path: 'requirements.txt'
        # env:
        #   PIP_ROOT_USER_ACTION: ignore
      - name: Print Python and Pip Configuration
        run: |
          python --version
          pip --version
          pip config list
          env | grep PIP_ROOT_USER_ACTION
      - name: Print environment variables
        run: env
      
      - name: Echo PIP_ROOT_USER_ACTION
        run: echo "Value of PIP_ROOT_USER_ACTION is $PIP_ROOT_USER_ACTION"
 
      - name: Cache the virtualenv
        uses: actions/cache@v2
        with:
          path: ./.venv
          key: ${{ runner.os }}-venv1-${{ hashFiles('**/requirements.txt') }}

      - name: Install dependencies
        env:
            PIP_ROOT_USER_ACTION: ignore
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt